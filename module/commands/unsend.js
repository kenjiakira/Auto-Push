module.exports.config = {
  name: "unsend",
  version: "1.1.0",
  hasPermission: 0,
  credits: "Akira",
  description: "G·ª° tin nh·∫Øn c·ªßa Bot",
  usePrefix: true,
  commandCategory: "message",
  usages: "G·ª° tin nh·∫Øn b·∫±ng c√°ch reply tin nh·∫Øn c·∫ßn g·ª° v·ªõi l·ªánh Unsend",
  cooldowns: 0,
  emoji: {
    delete: "üëç"
  }
};

module.exports.run = async function({ api, event }) {
  const { threadID, messageID, messageReply, senderID } = event;
  const currentUserID = api.getCurrentUserID();
  const { emojis } = module.exports.config;

  try {
    if (event.type === "message_reply") {
      if (messageReply.senderID !== currentUserID && messageReply.senderID !== senderID) {
        return api.sendMessage("‚ö†Ô∏è B·∫°n kh√¥ng th·ªÉ g·ª° tin nh·∫Øn c·ªßa ng∆∞·ªùi kh√°c.", threadID, messageID);
      }
      await api.unsendMessage(messageReply.messageID);
      return;
    }

    if (event.type === "message_reaction") {
      if (event.reaction === emojis.delete) {
        if (event.senderID === currentUserID) {  
          await api.unsendMessage(event.messageID);
          return;
        } else {
          return api.sendMessage("‚ö†Ô∏è B·∫°n kh√¥ng th·ªÉ g·ª° tin nh·∫Øn c·ªßa ng∆∞·ªùi kh√°c.", threadID, messageID);
        }
      }
    }
    
    return api.sendMessage("‚ö†Ô∏è H√£y reply tin nh·∫Øn ho·∫∑c th·∫£ emoji 'üëç' ƒë·ªÉ g·ª° tin nh·∫Øn.", threadID, messageID);
  } catch (error) {
    console.error("L·ªói khi g·ª° tin nh·∫Øn:", error);
    return api.sendMessage("‚ö†Ô∏è ƒê√£ x·∫£y ra l·ªói khi g·ª° tin nh·∫Øn. Vui l√≤ng th·ª≠ l·∫°i sau.", threadID, messageID);
  }
};
